package com.eomcs.basic.ex07;

// 1) 메서드문법
// [리턴값의 타입] 함수명 (파라미터선언,...) {명령어들}

//리턴값의 타입은 함수 블록에 들어있는 명령어를 수행한 후 결과로 놓이는 값의 타입
//파라미터 선언은 함수 블록을 실행할 때 외부로부터 받은 값을 저장할 변수를 선언하는것.

// 1) 명령어 블록을 실행할 때 값을 넘겨주지 않고 결과도 넘겨받지 않음.
// => 동생아 똥싸고와! (내가 주는것도 없고 똥도 안받음.)

// 2) 명령어 블록을 실행할 때 값을 넘겨줌. 결과는 받지 않음.
// => 동생아 과자사먹어! (내가 돈을주고 과자는 못받음)

// 3) 명령어 블록을 실행할 때 값을 넘겨주지 않음. 결과는 받음!
// => 동생아 물떠와! (나는 주는게 없고 물을 받음.)

// 4) 명령어 블록을 실행할 때 값을 넘겨주고 결과를 받음.
// => 동생아 건전지사와라! (내가 돈을주고 건전지를 받음.)
public class Exam0210_a {

  // 예1) 메서드 : 리턴값x, 파라미터x

  static void hello() {
    System.out.println("안녕하세요?");
    System.out.println("이 메서드는 어떤 값도 리턴하지 않는다네용~~~");
  }
  public static void main(String[] args) {
    //메서드 사용법
    //[리턴값을 받을 변수] = 메서드명(아규먼트);
    //아규먼트?
    //메서드 블록에 들어있는 명령을 실행하기 위해 넘겨주는 값
    // = 즉 파라미터 변수에 넘겨주는 값.

    //메서드 실행하기
    //메서드 호출
    hello();

    System.out.println("hello() 실행완료?");
    //hello 메서드는 파라미터 변수가 없기때문에 호출할 떄 값을 넣으면 안됌.
 }
}
